/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";
                #define DEFAULT = 0
                #define LOWER = 1
                #define RAISE = 2
                #define GAME1 = 3
                #define GAMEw = 4

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | ESC  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | RET |   | SPC | RSE  | ALT |
                        label = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp ESC &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp RET     &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  F1        |  F2  | F3    |  F4  | F5   |     | 1 | 2 | 3 | - | = | BKSP |
// | CTRL| C_VOL_UP   | LEFT | RIGHT | UP   | C_MUTE |   | 4 | 5 | 6 | + | / |   *  |
// | ESC | C_VOL_DN |PG_UP | PG_DOWN | DOWN | C_PP |     | 7 | 8 | 9 | 0 |   | SHFT |
//                           | GUI   |      | RET  |     | SPC |  .  | ALT |
                        label = "Lower";
                        bindings = <
   &kp TAB   &kp F1       &kp F2   &kp F3    &kp F4   &kp F5         &kp N1 &kp N2 &kp N3 &kp MINUS &kp EQUAL &kp BSPC
   &kp LCTRL &kp C_VOL_UP &kp LEFT &kp RIGHT &kp UP   &kp C_MUTE     &kp N4 &kp N5 &kp N6 &kp PLUS  &kp FSLH  &kp KP_MULTIPLY
   &kp ESC   &kp C_VOL_DN &kp PG_UP &kp PG_DN   &kp DOWN &kp C_PP       &kp N7 &kp N8 &kp N9 &kp N0    &trans    &kp RSHFT
                                &kp LGUI     &trans       &kp RET      &kp SPACE  &kp DOT   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !     |  @ |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |  F6    | F7 | F8  | F9  | _ |   |  =  | HOME |  [  |  ]  |  \  |  `   |
// | ESC  | BTCLR | BT1 | BT2 | F10 | - |   |  +  | END |  {  |  }  | "|" |  ~   |
//                    | GUI | TOGGLE | RET |   | SPC |     | ALT |
                        label = "Raise";
                        bindings = <
   &kp TAB   &kp EXCL   &kp AT       &kp HASH     &kp DLLR &kp PRCNT      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &kp F6     &kp F7       &kp F8       &kp F9   &kp UNDER      &kp EQUAL &kp HOME  &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp ESC   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &kp F10  &kp MINUS      &kp PLUS  &kp END   &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &tog 3   &kp RET                    &kp SPACE   &trans    &kp RALT
                        >;
                };
                game1_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | RSE | SPC |   | RET | TOGGLE  | GUI ||
                        label = "Game1";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LALT &mo 4 &kp SPACE     &kp RET &tog 3 &kp LGUI
                        >;
                };
                game2_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1 |  2 |  3 |  4  |  5  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | HOME | F1 | F2 | F3 | F4  | F5  |   |  =  | HOME |  [  |  ]  |  \  |  `   |
// | END  | F6 | F7 | F8 | F9  | F10 |   |  +  | END |  {  |  }  | "|" |  ~   |
//                    | GUI |     | RET |   | SPC |  TOGGLE  | ALT |
                        label = "Game2";
                        bindings = <
   &kp ESC   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp HOME  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5      &kp EQUAL &kp HOME &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp END   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10     &kp PLUS &kp END  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp RET          &kp SPACE   &tog 3    &kp RALT
                        >;
                };
        };
};
